package main

import (
	"encoding/json"
	"image/color"
	"io/ioutil"
	"log"
	"os"
	"strings"

	"github.com/Tnze/go-mc/data/block"
)

var (
	colors = map[block.ID]color.RGBA64{}
)

func loadColorMap() {
	f, err := os.Open("./color.json")
	if err != nil {
		log.Printf("Error opening colors json file: %s", err.Error())
		return
	}
	c, err := ioutil.ReadAll(f)
	if err != nil {
		log.Printf("Error reading colors json file: %s", err.Error())
		return
	}
	var r map[string][3]int
	err = json.Unmarshal(c, &r)
	if err != nil {
		log.Printf("Error parsing colors json file: %s", err.Error())
		return
	}
	for i, j := range r {
		bname := strings.TrimSuffix(i, "_top")
		bname = strings.TrimSuffix(bname, "_side")
		bname = strings.TrimSuffix(bname, "_bottom")
		bname = strings.TrimSuffix(bname, "_front")
		bname = strings.TrimSuffix(bname, "_back")
		bname = strings.TrimSuffix(bname, "_")
		bid, ok := idByName["minecraft:"+bname]
		if !ok {
			log.Printf("Can not find id for block %s, skipping", bname)
			continue
		}
		colors[block.ID(bid)] = color.RGBA64{uint16(j[0]), uint16(j[1]), uint16(j[2]), 255}
	}
	log.Printf("Loaded %d/%d blocks", len(colors), len(block.ByID))
	os.Exit(0)
}
